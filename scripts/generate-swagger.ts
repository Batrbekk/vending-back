#!/usr/bin/env tsx

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Swagger —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑ JSDoc –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: yarn generate-swagger
 */

import swaggerJSDoc from 'swagger-jsdoc';
import fs from 'fs';
import path from 'path';

const options: swaggerJSDoc.Options = {
  definition: {
    openapi: '3.0.0',
    info: {
      title: 'Vending Machine API',
      version: '1.0.0',
      description: 'API –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∞–º–∏',
      contact: {
        name: 'API Support',
        email: 'support@vending.com'
      }
    },
    servers: [
      {
        url: 'http://localhost:3000',
        description: 'Development server'
      }
    ],
    components: {
      securitySchemes: {
        bearerAuth: {
          type: 'http',
          scheme: 'bearer',
          bearerFormat: 'JWT'
        },
        cookieAuth: {
          type: 'apiKey',
          in: 'cookie',
          name: 'auth-token'
        }
      }
    },
    security: [
      {
        bearerAuth: []
      },
      {
        cookieAuth: []
      }
    ]
  },
  apis: [
    './app/api/**/*.ts',
    './lib/validation/**/*.ts',
    './lib/swagger/schemas.ts'
  ]
};

async function generateSwaggerSpec() {
  try {
    console.log('üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Swagger —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
    
    const spec = swaggerJSDoc(options);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∞—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    if (!spec || !spec.paths) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é');
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    const outputPath = path.join(process.cwd(), 'lib/swagger/generated-spec.json');
    fs.writeFileSync(outputPath, JSON.stringify(spec, null, 2));
    
    console.log('‚úÖ Swagger —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    console.log(`üìÅ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: ${outputPath}`);
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤: ${Object.keys(spec.paths).length}`);
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ —Å—Ö–µ–º: ${Object.keys(spec.components?.schemas || {}).length}`);
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const endpoints = Object.keys(spec.paths);
    const methods = endpoints.flatMap(path => Object.keys(spec.paths[path]));
    
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`- –í—Å–µ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤: ${endpoints.length}`);
    console.log(`- –í—Å–µ–≥–æ –º–µ—Ç–æ–¥–æ–≤: ${methods.length}`);
    console.log(`- GET: ${methods.filter(m => m === 'get').length}`);
    console.log(`- POST: ${methods.filter(m => m === 'post').length}`);
    console.log(`- PUT: ${methods.filter(m => m === 'put').length}`);
    console.log(`- DELETE: ${methods.filter(m => m === 'delete').length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Swagger —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateSwaggerSpec();
